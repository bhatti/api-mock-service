definitions:
  APIAuthorization:
    description: APIAuthorization defines mock auth parameters
    properties:
      format:
        type: string
        x-go-name: Format
      in:
        type: string
        x-go-name: In
      name:
        type: string
        x-go-name: Name
      scheme:
        type: string
        x-go-name: Scheme
      type:
        type: string
        x-go-name: Type
      url:
        type: string
        x-go-name: URL
    type: object
    x-go-package: github.com/bhatti/api-mock-service/internal/types
  APIKeyData:
    description: APIKeyData defines keys of api scenario for in-memory store
    properties:
      LastUsageTime:
        description: LastUsageTime of key data
        format: int64
        type: integer
      RequestCount:
        description: RequestCount for the API
        format: uint64
        type: integer
      assert_contents_pattern:
        description: AssertContentsPattern for request optionally
        type: string
        x-go-name: AssertContentsPattern
      assert_headers_pattern:
        additionalProperties:
          type: string
        description: AssertHeadersPattern for api response
        type: object
        x-go-name: AssertHeadersPattern
      assert_query_params_pattern:
        additionalProperties:
          type: string
        description: AssertQueryParamsPattern for the API
        type: object
        x-go-name: AssertQueryParamsPattern
      group:
        description: Group of scenario
        type: string
        x-go-name: Group
      method:
        $ref: '#/definitions/MethodType'
      name:
        description: Name to uniquely identify the scenario
        type: string
        x-go-name: Name
      order:
        description: Order of scenario
        format: int64
        type: integer
        x-go-name: Order
      path:
        description: Path for the API (excluding query params)
        type: string
        x-go-name: Path
      predicate:
        description: Predicate for the request
        type: string
        x-go-name: Predicate
      tags:
        description: Tags of scenario
        items:
          type: string
        type: array
        x-go-name: Tags
    type: object
    x-go-package: github.com/bhatti/api-mock-service/internal/types
  APIRequest:
    description: APIRequest defines mock request for APIs
    properties:
      assert_contents_pattern:
        description: AssertContentsPattern for request optionally
        type: string
        x-go-name: AssertContentsPattern
      assert_headers_pattern:
        additionalProperties:
          type: string
        description: AssertHeadersPattern for mock response
        type: object
        x-go-name: AssertHeadersPattern
      assert_query_params_pattern:
        additionalProperties:
          type: string
        description: AssertQueryParamsPattern for the API
        type: object
        x-go-name: AssertQueryParamsPattern
      assertions:
        description: Assertions for validating response
        items:
          type: string
        type: array
        x-go-name: Assertions
      contents:
        description: Contents for request optionally
        type: string
        x-go-name: Contents
      example_contents:
        description: ExampleContents sample for request optionally
        type: string
        x-go-name: ExampleContents
      headers:
        additionalProperties:
          type: string
        description: Headers for mock response
        type: object
        x-go-name: Headers
      path_params:
        additionalProperties:
          type: string
        description: PathParams sample for the API
        type: object
        x-go-name: PathParams
      query_params:
        additionalProperties:
          type: string
        description: QueryParams sample for the API
        type: object
        x-go-name: QueryParams
    type: object
    x-go-package: github.com/bhatti/api-mock-service/internal/types
  APIResponse:
    description: APIResponse defines mock response for APIs
    properties:
      assert_contents_pattern:
        description: AssertContentsPattern for request optionally
        type: string
        x-go-name: AssertContentsPattern
      assert_headers_pattern:
        additionalProperties:
          type: string
        description: AssertHeadersPattern for mock response
        type: object
        x-go-name: AssertHeadersPattern
      assertions:
        description: Assertions for validating response
        items:
          type: string
        type: array
        x-go-name: Assertions
      contents:
        description: Contents for request
        type: string
        x-go-name: Contents
      contents_file:
        description: ContentsFile for request
        type: string
        x-go-name: ContentsFile
      example_contents:
        description: ExampleContents sample for response optionally
        type: string
        x-go-name: ExampleContents
      headers:
        additionalProperties:
          items:
            type: string
          type: array
        description: Headers for mock response
        type: object
        x-go-name: Headers
      pipe_properties:
        description: PipeProperties to extract properties from response
        items:
          type: string
        type: array
        x-go-name: PipeProperties
      status_code:
        description: StatusCode for response
        format: int64
        type: integer
        x-go-name: StatusCode
    type: object
    x-go-package: github.com/bhatti/api-mock-service/internal/types
  APIScenario:
    description: APIScenario defines mock scenario for APIs
    properties:
      authentication:
        additionalProperties:
          $ref: '#/definitions/APIAuthorization'
        description: Authentication for the API
        type: object
        x-go-name: Authentication
      base_url:
        description: BaseURL of remote server
        type: string
        x-go-name: BaseURL
      description:
        description: Description of scenario
        type: string
        x-go-name: Description
      group:
        description: Group of scenario
        type: string
        x-go-name: Group
      method:
        $ref: '#/definitions/MethodType'
      name:
        description: Name to uniquely identify the scenario
        type: string
        x-go-name: Name
      order:
        description: Order of scenario
        format: int64
        type: integer
        x-go-name: Order
      path:
        description: Path for the API (excluding query params)
        type: string
        x-go-name: Path
      predicate:
        description: Predicate for the request
        type: string
        x-go-name: Predicate
      request:
        $ref: '#/definitions/APIRequest'
      response:
        $ref: '#/definitions/APIResponse'
      tags:
        description: Tags of scenario
        items:
          type: string
        type: array
        x-go-name: Tags
      wait_before_reply:
        $ref: '#/definitions/Duration'
    type: object
    x-go-package: github.com/bhatti/api-mock-service/internal/types
  Duration:
    description: |-
      A Duration represents the elapsed time between two instants
      as an int64 nanosecond count. The representation limits the
      largest representable duration to approximately 290 years.
    format: int64
    type: integer
    x-go-package: time
  MethodType:
    description: MethodType for HTTP
    type: string
    x-go-package: github.com/bhatti/api-mock-service/internal/types
  ProducerContractRequest:
    description: ProducerContractRequest for generating fuzz-data requests to an API
      implementation for producer based contract testing
    properties:
      base_url:
        description: BaseURL of remote server
        type: string
        x-go-name: BaseURL
      execution_times:
        description: ExecutionTimes for contract testing
        format: int64
        type: integer
        x-go-name: ExecutionTimes
      verbose:
        description: Verbose setting
        type: boolean
        x-go-name: Verbose
    type: object
    x-go-package: github.com/bhatti/api-mock-service/internal/types
  ProducerContractResponse:
    description: ProducerContractResponse for returning summary of producer based
      test results
    properties:
      errors:
        additionalProperties:
          type: string
        type: object
        x-go-name: Errors
      failed:
        format: int64
        type: integer
        x-go-name: Failed
      metrics:
        additionalProperties:
          format: double
          type: number
        type: object
        x-go-name: Metrics
      results:
        additionalProperties:
          type: string
        type: object
        x-go-name: Results
      succeeded:
        format: int64
        type: integer
        x-go-name: Succeeded
      urls:
        additionalProperties:
          format: int64
          type: integer
        type: object
        x-go-name: URLs
    type: object
    x-go-package: github.com/bhatti/api-mock-service/internal/types
paths:
  /_contracts/{group}:
    post:
      operationId: postProducerContractGroupScenario
      parameters:
      - in: path
        name: group
        required: true
        type: string
        x-go-name: Group
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/ProducerContractRequest'
      responses:
        "200":
          $ref: '#/responses/apiScenarioContractResponse'
      summary: Invokes service api-contract by group of api contracts.
      tags:
      - producer-contract
  /_contracts/{method}/{name}/{path}:
    post:
      description: |-
        Plays contract client for a scenario by name
        Invokes service api-contract by method, contracts-name and path.
      operationId: postProducerContractScenarioByPath
      parameters:
      - in: path
        name: method
        required: true
        type: string
        x-go-name: Method
      - in: path
        name: name
        required: true
        type: string
        x-go-name: Name
      - in: path
        name: path
        required: true
        type: string
        x-go-name: Path
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/ProducerContractRequest'
      responses:
        "200":
          $ref: '#/responses/apiScenarioContractResponse'
      tags:
      - producer-contract
  /_contracts/history/{group}:
    post:
      operationId: postProducerContractHistoryByGroup
      parameters:
      - in: path
        name: group
        required: true
        type: string
        x-go-name: Group
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/ProducerContractRequest'
      responses:
        "200":
          $ref: '#/responses/apiScenarioContractResponse'
      summary: Invokes service api-contract using executed history of consumer contracts.
      tags:
      - producer-contract
  /_fixtures/{method}/{name}/{path}:
    delete:
      operationId: deleteAPITestFixture
      parameters:
      - in: path
        name: method
        required: true
        type: string
        x-go-name: Method
      - in: path
        name: name
        required: true
        type: string
        x-go-name: Name
      - in: path
        name: path
        required: true
        type: string
        x-go-name: Path
      responses:
        "200":
          $ref: '#/responses/emptyResponse'
      summary: Deletes an existing api-test-fixtures based on name and path.
      tags:
      - api-test-fixtures
    get:
      operationId: getAPITestFixture
      parameters:
      - in: path
        name: method
        required: true
        type: string
        x-go-name: Method
      - in: path
        name: name
        required: true
        type: string
        x-go-name: Name
      - in: path
        name: path
        required: true
        type: string
        x-go-name: Path
      responses:
        "200":
          $ref: '#/responses/apiFixtureResponse'
      summary: Finds an existing api-test-fixtures based on name and path.
      tags:
      - api-test-fixtures
    post:
      operationId: postAPITestFixture
      parameters:
      - in: path
        name: method
        required: true
        type: string
        x-go-name: Method
      - in: path
        name: name
        required: true
        type: string
        x-go-name: Name
      - in: path
        name: path
        required: true
        type: string
        x-go-name: Path
      - in: body
        name: Body
        schema:
          items:
            format: uint8
            type: integer
          type: array
      responses:
        "200":
          $ref: '#/responses/apiFixtureResponse'
      summary: Creates new api-test-fixtures based on request body.
      tags:
      - api-test-fixtures
  /_fixtures/{method}/fixtures/{path}:
    get:
      operationId: getAPITestFixtureNames
      parameters:
      - in: path
        name: method
        required: true
        type: string
        x-go-name: Method
      - in: path
        name: path
        required: true
        type: string
        x-go-name: Path
      responses:
        "200":
          $ref: '#/responses/apiFixtureNamesResponse'
      summary: Finds api test-fixture names for given method and path.
      tags:
      - api-test-fixtures
  /_oapi:
    post:
      operationId: postMockOAPIScenario
      parameters:
      - in: body
        name: Body
        schema:
          items:
            format: uint8
            type: integer
          type: array
      responses:
        "200":
          $ref: '#/responses/apiScenarioOAPIResponse'
      summary: Creates new api scenarios based on Open API v3 uploaded by user.
      tags:
      - open-api
  /_oapi/{group}:
    get:
      operationId: getOpenAPISpecsByGroup
      parameters:
      - in: path
        name: group
        required: true
        type: string
        x-go-name: Group
      responses:
        "200":
          $ref: '#/responses/apiOapiSpecIResponse'
      summary: Generates OpenAPI specs by group of API scenarios.
      tags:
      - open-api
  /_oapi/{method}/{name}/{path}:
    get:
      operationId: getOpenAPISpecsByScenario
      parameters:
      - in: path
        name: method
        required: true
        type: string
        x-go-name: Method
      - in: path
        name: name
        required: true
        type: string
        x-go-name: Name
      - in: path
        name: path
        required: true
        type: string
        x-go-name: Path
      responses:
        "200":
          $ref: '#/responses/apiOapiSpecIResponse'
      summary: Generates OpenAPI specs for the API scenario by method, name and path.
      tags:
      - open-api
  /_oapi/history/{name}:
    get:
      operationId: getOpenAPISpecsByHistory
      parameters:
      - description: Name of open-api spec
        in: path
        name: name
        required: true
        type: string
        x-go-name: Name
      responses:
        "200":
          $ref: '#/responses/apiOapiSpecIResponse'
      summary: Generates OpenAPI specs based on name of API scenario from execution
        history.
      tags:
      - open-api
  /_proxy:
    delete:
      description: Records scenario from DELETE request
      operationId: deleteAPIProxy
      tags:
      - api-proxy
    get:
      description: Records scenario from GET request
      operationId: getAPIProxy
      tags:
      - api-proxy
    post:
      description: Records scenario from POST request
      operationId: postAPIProxy
      tags:
      - api-proxy
    put:
      description: Records scenario from PUT request
      operationId: putAPIProxy
      tags:
      - api-proxy
  /_scenarios:
    get:
      description: List paths of all scenarios
      operationId: listMockScenario
      responses:
        "200":
          $ref: '#/responses/apiScenarioPathsResponse'
      tags:
      - api-scenarios
    post:
      operationId: postMockScenario
      parameters:
      - in: path
        name: method
        required: true
        type: string
        x-go-name: Method
      - in: path
        name: name
        required: true
        type: string
        x-go-name: Name
      - in: path
        name: path
        required: true
        type: string
        x-go-name: Path
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/APIScenario'
      responses:
        "200":
          $ref: '#/responses/apiScenarioResponse'
      summary: Creates new api scenario based on request body.
      tags:
      - api-scenarios
  /_scenarios/{method}/{name}/{path}:
    delete:
      operationId: getAPIScenario
      parameters:
      - in: path
        name: method
        required: true
        type: string
        x-go-name: Method
      - in: path
        name: name
        required: true
        type: string
        x-go-name: Name
      - in: path
        name: path
        required: true
        type: string
        x-go-name: Path
      responses:
        "200":
          $ref: '#/responses/emptyResponse'
      summary: Deletes an existing api scenario based on id.
      tags:
      - api-scenarios
    get:
      operationId: getAPIScenario
      parameters:
      - in: path
        name: method
        required: true
        type: string
        x-go-name: Method
      - in: path
        name: name
        required: true
        type: string
        x-go-name: Name
      - in: path
        name: path
        required: true
        type: string
        x-go-name: Path
      responses:
        "200":
          $ref: '#/responses/emptyResponse'
      summary: Deletes an existing api scenario based on id.
      tags:
      - api-scenarios
  /_scenarios/{method}/names/{path}:
    get:
      description: Returns api scenario names
      operationId: getAPIScenarioNames
      parameters:
      - in: path
        name: method
        required: true
        type: string
        x-go-name: Method
      - in: path
        name: path
        required: true
        type: string
        x-go-name: Path
      responses:
        "200":
          $ref: '#/responses/apiNamesResponse'
      tags:
      - api-scenarios
  /_scenarios/groups:
    get:
      description: Returns api scenario groups
      operationId: getAPIGroups
      responses:
        "200":
          $ref: '#/responses/apiGroupsResponse'
      tags:
      - api-scenarios
  /_scenarios/history:
    get:
      description: Fetches history of api scenarios
      operationId: apiScenarioHistory
      responses:
        "200":
          $ref: '#/responses/apiHistoryResponse'
      tags:
      - api-scenarios
  /{path}:
    delete:
      operationId: deleteRoot
      parameters:
      - in: path
        name: path
        required: true
        type: string
        x-go-name: Path
      summary: Play API scenario for previously defined API contract based on DELETE
        request.
      tags:
      - consumer-contract
    get:
      operationId: getRoot
      parameters:
      - in: path
        name: path
        required: true
        type: string
        x-go-name: Path
      summary: Play API scenario for previously defined API contract based on GET
        request.
      tags:
      - consumer-contract
    head:
      operationId: headRoot
      summary: Play API scenario for previously defined API contract based on HEAD
        request.
      tags:
      - consumer-contract
    options:
      operationId: optionsRoot
      summary: Play API scenario for previously defined API contract based on OPTIONS
        request.
      tags:
      - consumer-contract
    patch:
      operationId: patchRoot
      summary: Play API scenario for previously defined API contract based on PATCH
        request.
      tags:
      - consumer-contract
    post:
      operationId: postRoot
      parameters:
      - in: path
        name: path
        required: true
        type: string
        x-go-name: Path
      summary: Play API scenario for previously defined API contract based on POST
        request.
      tags:
      - consumer-contract
    put:
      operationId: putRoot
      parameters:
      - in: path
        name: path
        required: true
        type: string
        x-go-name: Path
      summary: Play API scenario for previously defined API contract based on PUT
        request.
      tags:
      - consumer-contract
responses:
  apiFixtureNamesResponse:
    description: APIFixture names
    schema:
      items:
        type: string
      type: array
  apiFixtureResponse:
    description: APIFixture body for update
    schema:
      items:
        format: uint8
        type: integer
      type: array
  apiGroupsResponse:
    description: APIScenario groups
    schema:
      items:
        type: string
      type: array
  apiHistoryResponse:
    description: APIScenario history scenario names
    schema:
      items:
        type: string
      type: array
  apiNamesResponse:
    description: APIScenario names
    schema:
      items:
        type: string
      type: array
  apiOapiSpecIResponse:
    description: APIScenario body for update
    schema:
      items:
        format: uint8
        type: integer
      type: array
  apiScenarioContractResponse:
    description: APIScenario body for update
    schema:
      $ref: '#/definitions/ProducerContractResponse'
  apiScenarioOAPIResponse:
    description: APIScenario body for update
    schema:
      $ref: '#/definitions/APIScenario'
  apiScenarioPathsResponse:
    description: APIScenario summary and paths
    schema:
      additionalProperties:
        $ref: '#/definitions/APIKeyData'
      type: object
  apiScenarioResponse:
    description: APIScenario body for update
    schema:
      $ref: '#/definitions/APIScenario'
  emptyResponse:
    description: ""
swagger: "2.0"

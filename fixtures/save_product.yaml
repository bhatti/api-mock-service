method: POST
name: saveProduct
path: /products
description: ""
order: 0
group: products
predicate: ""
request:
    assert_query_params_pattern: {}
    assert_headers_pattern: {}
    assert_contents_pattern: '{"category":"(BOOKS|MUSIC|TOYS)","id":"(__string__\\w+)","inventory":"(__number__[+-]?(([0-9]{1,10}(\\.[0-9]{1,5})?)|(\\.[0-9]{1,10})))","name":"(__string__\\w+)","price.amount":"(__number__[+-]?(([0-9]{1,10}(\\.[0-9]{1,5})?)|(\\.[0-9]{1,10})))","price.currency":"(USD|CAD)"}'
    path_params: {}
    query_params: {}
    headers:
        "Content-Type": "application/json"
    contents: |
        category: {{EnumString `BOOKS MUSIC TOYS`}}
        id: {{UUID}}
        inventory: {{RandIntMinMax 5 500}}
        name: {{RandSentence 3 5}}
        price:
            amount: {{RandIntMinMax 1 50}}
            currency: "{{EnumString `USD CAD`}}"
response:
    headers: {}
    contents: '{"category":"{{EnumString `BOOKS MUSIC TOYS`}}","id":"{{RandStringMinMax 0 0}}","inventory":"{{RandIntMinMax 5 500}}","name":"{{RandStringMinMax 2 50}}","price":{"amount":{{RandIntMinMax 0 0}},"currency":"$"}}'
    contents_file: ""
    status_code: 200
    assert_headers_pattern: {}
    assert_contents_pattern: '{"category":"(__string__(BOOKS|MUSIC|TOYS))","id":"(__string__\\w+)","inventory":"(__number__[+-]?(([0-9]{1,10}(\\.[0-9]{1,5})?)|(\\.[0-9]{1,10})))","name":"(__string__\\w+)","price.amount":"(__number__[+-]?(([0-9]{1,10}(\\.[0-9]{1,5})?)|(\\.[0-9]{1,10})))","price.currency":"(USD|CAD)"}'
    pipe_properties: 
      - id
      - name
    assertions:
        - VariableGE contents.inventory 5
        - VariableContains contents.category S
wait_before_reply: 0s
